---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-init-scripts
  namespace: $NAMESPACE
data:
  create_table.sql: |
    CREATE TABLE IF NOT EXISTS trades (
      share_price float4 check (share_price>=0), 
      shares integer check (shares>=0), 
      action varchar(255), 
      customer_id varchar(255), 
      symbol varchar(255), 
      trade_id varchar(255) not null, 
      primary key (trade_id));
    CREATE EXTENSION IF NOT EXISTS pg_stat_statements;
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: trading
    service: postgresql
  name: postgresql
  namespace: $NAMESPACE
spec:
  replicas: 1
  selector:
    matchLabels:
      app: trading
      service: postgresql
  template:
    metadata:
      labels:
        app: trading
        service: postgresql
        type: postgresql
        dbName: $POSTGRESQL_DBNAME
    spec:
      tolerations:
      - key: "REGION"
        operator: "Equal"
        value: "$REGION"
        effect: "PreferNoSchedule"
      containers:
        - name: postgresql
          volumeMounts:
            - name: init-scripts-volume
              mountPath: /docker-entrypoint-initdb.d
          env:
            - name: POSTGRES_DB
              value: $POSTGRESQL_DBNAME
            - name: POSTGRES_PASSWORD
              value: $POSTGRESQL_PASSWORD
            - name: POSTGRES_USER
              value: $POSTGRESQL_USER
          image: postgres
          args: ["-c", "log_statement=all", "-c", "shared_preload_libraries=pg_stat_statements"]
          ports:
            - containerPort: 5432
              protocol: TCP
      volumes:
        - name: init-scripts-volume
          configMap:
            name: postgres-init-scripts
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: trading
    service: postgresql
  name: postgresql
  namespace: $NAMESPACE
spec:
  ports:
    - name: postgresql
      port: 5432
      targetPort: 5432
      protocol: TCP
  selector:
    app: trading
    service: postgresql
---
